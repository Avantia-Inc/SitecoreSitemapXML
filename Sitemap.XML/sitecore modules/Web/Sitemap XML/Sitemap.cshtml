@inherits System.Web.Mvc.WebViewPage
@using Sitecore.Data.Items
@using Sitemap.XML.Models
@using SM = Sitemap.XML.Models.SitemapManager;
@{
    var root = Sitecore.Context.Database.GetItem(Sitecore.Context.Site.StartPath);
    <div class="sitemap">
        <ul>
            <li><a href="@Sitecore.Links.LinkManager.GetItemUrl(root)">@root["title"]</a>
            @RecursiveSitemap(root)
            </li>
        </ul>
    </div>
}

@helper RecursiveSitemap(Item parentItem)
{
    if (SM.IsShared(parentItem))
    {
        parentItem = SM.GetSharedParent(parentItem);
    }
    var childList = parentItem.Children;

    if (SM.ContainsItemsToShow(childList))
    {
        @:<ul>
    }
    foreach (Item child in childList)
    {
        var localChild = child;
        if (SM.IsEnabledTemplate(localChild) && !SM.IsDisabledItem(localChild))
        {
            var item = new SitemapItem(localChild, Sitecore.Context.Site, SM.IsShared(parentItem)? parentItem:null);
            @:<li>
            <a href="@item.Location">@item.Title</a>
        }
        if (SM.IsShared(localChild))
        {
            localChild = SM.GetSharedParent(localChild);
        }
        if (localChild.Children.Count != 0)
        {
            @RecursiveSitemap(localChild)
        }
        if (SM.IsEnabledTemplate(localChild) && !SM.IsDisabledItem(localChild))
        {
            @:</li>
        }
    }
    if (SM.ContainsItemsToShow(childList))
    {
        @:</ul>
    }

}